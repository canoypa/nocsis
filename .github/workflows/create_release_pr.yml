name: Create Release Pull Request

on:
  push:
    # branches: [development]

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create_release_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create Release Pull Request
        run: |
          pr_title=$(echo "Release $(TZ=Asia/Tokyo date +'%Y-%m-%d')")

          release_pr_number=$(gh pr list -B main -H development --json "number" -q ".[0].number")
          if [ -z "$release_pr_number" ]; then
            release_pr_number=$(gh pr create -H development -B main -t "$pr_title" -b "wip" --label "ðŸš€ ãƒªãƒªãƒ¼ã‚¹" | sed -n 's/.*\///p')
          fi

          GRAPHQL_QUERY="$(cat <<'EOF'
          query ($owner: String!, $repo: String!, $prNumber: Int!) {
            repository(owner: $owner, name: $repo) {
              pullRequest(number: $prNumber) {
                commits(first: 250) {
                  nodes {
                    commit {
                      associatedPullRequests(first: 1) {
                        nodes {
                          baseRefName
                          author { login }
                          number
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          EOF
          )"
          prs=$(gh api graphql -F query="$GRAPHQL_QUERY" -F owner="${{ github.repository_owner }}" -F repo="${{ github.event.repository.name }}" -F prNumber="$release_pr_number" \
                | jq '[.data.repository.pullRequest.commits.nodes[].commit.associatedPullRequests.nodes[] | select(.baseRefName == "development")] | unique_by(.number)')

          body=$(echo "$prs" | jq -r '.[] | "- #\(.number) @\(.author.login)"')

          gh pr edit $release_pr_number -t "$pr_title" -b "$body"
